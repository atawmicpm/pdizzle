{
  "name": "jasmine-terminal-reporter",
  "version": "0.9.1",
  "description": "A simple terminal reporter for Jasmine",
  "homepage": "https://github.com/dashthis/jasmine-terminal-reporter",
  "bugs": {
    "url": "https://github.com/dashthis/jasmine-terminal-reporter/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/dashthis/jasmine-terminal-reporter"
  },
  "main": "index.js",
<<<<<<< HEAD
  "gitHead": "c61031bc252643035197dfd2645c2486ab35e44b",
  "_id": "jasmine-terminal-reporter@0.9.1",
  "scripts": {},
  "_shasum": "5bbc56289164c8796461d30b64c56689bda96f89",
  "_from": "jasmine-terminal-reporter@>=0.9.1 <0.10.0",
  "_npmVersion": "1.4.28",
  "_npmUser": {
    "name": "jbblanchet",
    "email": "jbblanchet@dashthis.com"
  },
  "maintainers": [
    {
      "name": "jbblanchet",
      "email": "jbblanchet@dashthis.com"
    }
  ],
  "dist": {
    "shasum": "5bbc56289164c8796461d30b64c56689bda96f89",
    "tarball": "http://registry.npmjs.org/jasmine-terminal-reporter/-/jasmine-terminal-reporter-0.9.1.tgz"
  },
  "directories": {},
  "_resolved": "https://registry.npmjs.org/jasmine-terminal-reporter/-/jasmine-terminal-reporter-0.9.1.tgz"
=======
  "readme": "jasmine-terminal-reporter\r\n=========================\r\n\r\nA simple terminal reporter for Jasmine, shamelessly stolen from [juliemr/minijasminenode](https://github.com/juliemr/minijasminenode).\r\n\r\ninstallation\r\n------------\r\n\r\nGet the library with\r\n\r\n    npm install jasmine-terminal-reporter\r\n\r\nusage\r\n-----\r\n\r\nDepends on your jasmine spec runner, but to import and instantiate the reporter:\r\n\r\n```javascript\r\n    var Reporter = require('jasmine-terminal-reporter');\r\n\r\n    var reporter = new Reporter(options)\r\n    // At this point, jasmine is available in the global node context.\r\n\r\n    // Add your tests by filename.\r\n    miniJasmineLib.addSpecs('myTestFolder/mySpec.js');\r\n\r\n    // If you'd like to add a custom Jasmine reporter, you can do so. Tests will\r\n    // be automatically reported to the terminal.\r\n    miniJasmineLib.addReporter(myCustomReporter);\r\n\r\n    // Run those tests!\r\n    miniJasmineLib.executeSpecs(options);\r\n```\r\n\r\nYou can also pass an options object into `executeSpecs`\r\n\r\n````javascript\r\n    var miniJasmineLib = require('minijasminenode2');\r\n\r\n    var options = {\r\n      // An array of filenames, relative to current dir. These will be\r\n      // executed, as well as any tests added with addSpecs()\r\n      specs: ['specDir/mySpec1.js', 'specDir/mySpec2.js'],\r\n      // A function to call on completion.\r\n      // function(passed)\r\n      onComplete: function(passed) { console.log('done!'); },\r\n      // If true, display suite and spec names.\r\n      isVerbose: false,\r\n      // If true, print colors to the terminal.\r\n      showColors: true,\r\n      // If true, include stack traces in failures.\r\n      includeStackTrace: true,\r\n      // Time to wait in milliseconds before a test automatically fails\r\n      defaultTimeoutInterval: 5000\r\n    };\r\n    miniJasmineLib.executeSpecs(options);\r\n````\r\n",
  "readmeFilename": "README.md",
  "_id": "jasmine-terminal-reporter@0.9.1",
  "_from": "jasmine-terminal-reporter@^0.9.1"
>>>>>>> b7942d4d5d2c32d7a748a741d5132f096fc00ed2
}
